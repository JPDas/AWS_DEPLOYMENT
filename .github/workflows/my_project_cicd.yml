name: FASTAPI  CI/CD HELLOWORLD-APP

on:
    push:
      branches:
        - main
      paths:
        - "api/**"
        - ".github/workflows/my_project_cicd.yml"

    pull_request:
      branches:
        - main
      paths:
        - "api/**"
        - ".github/workflows/my_project_cicd.yml"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with: 
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: pytest 
    
  build-ecr-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:          
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}
      
      - name: Create ECR repository (if it doesn't exist)
        run: |
          aws ecr describe-repositories --repository-names hello-world-repo || aws ecr create-repository --repository-name hello-world-repo

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hello-world-repo # Replace with your ECR repo name
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT


      # - name: login to docker registry
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{secrets.DOCKER_USERNAME}}
      #     password: ${{secrets.DOCKER_PASSWORD}}

      # - name: build and push docker image to registry
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/helloworld-app:latest

  # build-infrastructure:
  #   runs-on: ubuntu-latest


